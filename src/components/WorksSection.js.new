import React, { useState } from 'react';
import styled from 'styled-components';
import SectionHeading from './SectionHeading';
import { motion, AnimatePresence } from 'framer-motion';

// Sample data for works/portfolio
const worksData = [
  {
    id: 1,
    title: 'Natural Eyebrow Shaping',
    category: 'Eyebrows',
    image: 'https://images.unsplash.com/photo-1616683693504-3ea7e9ad6fec?ixlib=rb-4.0.3&auto=format&fit=crop&w=987&q=80',
    description: 'Perfect natural eyebrow shaping using eco-friendly products.',
  },
  {
    id: 2,
    title: 'Microblading Session',
    category: 'Microblading',
    image: 'https://images.unsplash.com/photo-1522337094846-8a818192de1f?ixlib=rb-4.0.3&auto=format&fit=crop&w=987&q=80',
    description: 'Precision microblading for fuller, natural-looking eyebrows.',
  },
  {
    id: 3,
    title: 'Eyebrow Tinting',
    category: 'Tinting',
    image: 'https://images.unsplash.com/photo-1515688594390-b649af70d282?ixlib=rb-4.0.3&auto=format&fit=crop&w=995&q=80',
    description: 'Natural eyebrow tinting using plant-based dyes.',
  },
  {
    id: 4,
    title: 'Eyebrow Lamination',
    category: 'Lamination',
    image: 'https://images.unsplash.com/photo-1526045612212-70caf35c14df?ixlib=rb-4.0.3&auto=format&fit=crop&w=988&q=80',
    description: 'Modern eyebrow lamination for a sleek, defined look.',
  },
  {
    id: 5,
    title: 'Full Eyebrow Makeover',
    category: 'Makeover',
    image: 'https://images.unsplash.com/photo-1621607512022-6aecc4fed814?ixlib=rb-4.0.3&auto=format&fit=crop&w=987&q=80',
    description: 'Complete eyebrow transformation with multiple techniques.',
  },
  {
    id: 6,
    title: 'Eyebrow Correction',
    category: 'Correction',
    image: 'https://images.unsplash.com/photo-1605497788044-5a32c7078486?ixlib=rb-4.0.3&auto=format&fit=crop&w=987&q=80',
    description: 'Specialized correction for previously over-plucked eyebrows.',
  },
];

// Get unique categories for filter
const categories = ['All', ...new Set(worksData.map(item => item.category))];

// Styled Components - Define these before the component
const StyledWorks = styled.section`
  padding: var(--section-padding);
  background-color: var(--light-bg);
`;

const FilterContainer = styled.div`
  display: flex;
  flex-wrap: wrap;
  gap: 0.8rem;
  margin: 2rem 0;
  justify-content: center;
  
  @media (max-width: 768px) {
    gap: 0.5rem;
  }
`;

const FilterButton = styled.button`
  background: ${props => props.active ? 'var(--primary)' : 'transparent'};
  color: ${props => props.active ? 'var(--light)' : 'var(--text)'};
  border: 1px solid ${props => props.active ? 'var(--primary)' : 'var(--gray)'};
  padding: 0.5rem 1.2rem;
  border-radius: var(--radius-sm);
  font-size: 0.9rem;
  font-weight: 400;
  cursor: pointer;
  transition: var(--transition);
  box-shadow: none;
  
  &:hover {
    background: ${props => props.active ? 'var(--primary)' : 'rgba(var(--primary-rgb), 0.08)'};
    transform: translateY(0);
    box-shadow: none;
  }
`;

const WorksGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: 1.5rem;
  margin-top: 2rem;
  
  @media (max-width: 768px) {
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1rem;
  }
`;

const WorkImage = styled.div`
  position: relative;
  aspect-ratio: 3/4;
  overflow: hidden;
  
  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.4s ease;
  }
`;

const WorkOverlay = styled.div`
  position: absolute;
  inset: 0;
  background: linear-gradient(to top, rgba(0,0,0,0.75) 0%, rgba(0,0,0,0.2) 50%, rgba(0,0,0,0) 100%);
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  padding: 1.5rem;
  opacity: 0;
  transition: opacity 0.3s ease;
  
  @media (max-width: 768px) {
    opacity: 1;
    background: linear-gradient(to top, rgba(0,0,0,0.75) 0%, rgba(0,0,0,0.2) 60%, rgba(0,0,0,0) 100%);
    padding: 1.2rem;
  }
`;

const WorkCategory = styled.span`
  color: var(--primary-light);
  font-size: 0.7rem;
  text-transform: uppercase;
  letter-spacing: 1.5px;
  margin-bottom: 0.5rem;
  font-weight: 500;
  background: rgba(var(--primary-rgb), 0.2);
  padding: 0.3rem 0.6rem;
  border-radius: var(--radius-sm);
  display: inline-block;
  backdrop-filter: blur(4px);
`;

const WorkTitle = styled.h3`
  color: white;
  margin-bottom: 0.5rem;
  font-size: 1.2rem;
`;

const WorkDescription = styled.p`
  color: white;
  font-size: 0.9rem;
  margin-bottom: 1rem;
`;

// Define WorkItem after WorkOverlay has been defined
const WorkItem = styled.div`
  border-radius: var(--radius-md);
  overflow: hidden;
  box-shadow: var(--shadow);
  transition: var(--transition);
  cursor: pointer;
  background: var(--light);
  
  &:hover {
    transform: translateY(-3px);
    box-shadow: var(--shadow-hover);
    
    img {
      transform: scale(1.03);
    }
    
    ${WorkOverlay} {
      opacity: 1;
    }
  }
`;

const WorksSection = () => {
  const [activeCategory, setActiveCategory] = useState('All');
  
  const filteredWorks = activeCategory === 'All' 
    ? worksData 
    : worksData.filter(work => work.category === activeCategory);
  
  return (
    <StyledWorks id="works">
      <div className="container">
        <SectionHeading
          title="Our Works"
          subtitle="Portfolio"
          description="Browse through our portfolio of eyebrow transformations and see the quality of our work."
        />
        
        <FilterContainer>
          {categories.map(category => (
            <FilterButton 
              key={category}
              active={activeCategory === category}
              onClick={() => setActiveCategory(category)}
            >
              {category}
            </FilterButton>
          ))}
        </FilterContainer>
        
        <WorksGrid>
          <AnimatePresence>
            {filteredWorks.map((work) => (
              <WorkItem 
                key={work.id}
                as={motion.div}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: 20 }}
                transition={{ duration: 0.3 }}
                layout
              >
                <WorkImage>
                  <img src={work.image} alt={work.title} />
                  <WorkOverlay>
                    <WorkCategory>{work.category}</WorkCategory>
                    <WorkTitle>{work.title}</WorkTitle>
                    <WorkDescription>{work.description}</WorkDescription>
                  </WorkOverlay>
                </WorkImage>
              </WorkItem>
            ))}
          </AnimatePresence>
        </WorksGrid>
      </div>
    </StyledWorks>
  );
};

export default WorksSection;
